Παρακάτω θα βρεις τον ίδιο κώδικα από το προηγούμενο παράδειγμα (με 5 στάσεις/νησιά/παραλίες και διακεκομμένη γραμμή στο Tab 2), εμπλουτισμένο στο “Sponsor Offer” ώστε να εμφανίζεται η προτεινόμενη διαδρομή – δηλαδή σε ποιες παραλίες θα σταματάει το σponsored σκάφος. Αυτή η διαδρομή είναι ήδη αποτυπωμένη οπτικά στον χάρτη (Rhodes - Main Port → Kallithea Beach → Lindos Beach → Prasonisi Beach → Finish Spot).

> Οδηγίες: Αποθηκεύεις αυτόν τον κώδικα, (π.χ. app.py), τρέχεις streamlit run app.py, και βλέπεις τα Tab1-Tab4. Στο Tab 2 (Board Game), δίπλα στο “Sponsor Offer,” θα δεις και τις παραλίες αναλυτικά.




---

import streamlit as st
import math
import folium
from streamlit_folium import st_folium
from datetime import date, timedelta

# ---------- Minimal distance function ----------
def distance_nm(lat1, lon1, lat2, lon2):
    d_lat = math.radians(lat2 - lat1)
    d_lon = math.radians(lat2 - lon1)
    a = (math.sin(d_lat/2)**2 +
         math.cos(math.radians(lat1)) *
         math.cos(math.radians(lat2)) *
         math.sin(d_lon/2)**2)
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))
    dist_km = 6371.0 * c
    return dist_km * 0.539957

# ========== Session State ==========
if "profile" not in st.session_state:
    st.session_state["profile"] = {
        "name": "",
        "surname": "",
        "age": 0,
        "photo": None,
        "facebook_friends": 0,
        "instagram_followers": 0,
        "adonboard_friends": 0,
        "friend_count": 0
    }

# Λίστα νησιών/παραλιών - στάσεων (διακεκομμένη γραμμή)
if "island_squares" not in st.session_state:
    st.session_state["island_squares"] = [
        {
            "name": "Rhodes - Main Port",
            "coords": (36.4349, 28.2176),
            "sponsor_logo": "https://via.placeholder.com/50.png?text=Vodafone"
        },
        {
            "name": "Kallithea Beach",
            "coords": (36.3825, 28.2472),
            "sponsor_logo": None
        },
        {
            "name": "Lindos Beach",
            "coords": (36.0917, 28.0850),
            "sponsor_logo": None
        },
        {
            "name": "Prasonisi Beach",
            "coords": (35.8873, 27.7876),
            "sponsor_logo": "https://via.placeholder.com/50.png?text=Nike"
        },
        {
            "name": "Finish Spot",
            "coords": (35.6000, 27.5000),
            "sponsor_logo": None
        }
    ]

if "total_nm" not in st.session_state:
    st.session_state["total_nm"] = 0.0

if "profile_sent" not in st.session_state:
    st.session_state["profile_sent"] = False

if "active_sponsor" not in st.session_state:
    st.session_state["active_sponsor"] = None

if "sponsor_decision" not in st.session_state:
    st.session_state["sponsor_decision"] = None

if "final_campaign_decision" not in st.session_state:
    st.session_state["final_campaign_decision"] = None

# Για κόκκινη ειδοποίηση
if "show_red_light" not in st.session_state:
    st.session_state["show_red_light"] = False

# ---------- Sidebar με progress bar ----------
st.sidebar.title("AddOnBoard Platform Stats")
st.sidebar.info("Active users: 35,000")
MAX_FRIENDS = 100
current_friends = st.session_state["profile"]["friend_count"]
progress_ratio = min(current_friends / MAX_FRIENDS, 1.0)
st.sidebar.progress(progress_ratio)
st.sidebar.write(f"You have {current_friends} / {MAX_FRIENDS} possible AddOnBoard friends.")
st.sidebar.write("Interact with companies or 'Add Friend' to grow your network & attract sponsors!")

# ---------- Tabs (4) ----------
tabs = st.tabs([
    "1. Profile Setup",
    "2. Board Game (Islands & Beaches)",
    "3. Sponsor Requirements",
    "4. Sponsor Admin"
])

# ========== TAB 1: Profile Setup ==========
with tabs[0]:
    st.title("Profile Setup (Passenger)")

    with st.form("profile_form"):
        st.session_state["profile"]["name"] = st.text_input("Name", value=st.session_state["profile"]["name"])
        st.session_state["profile"]["surname"] = st.text_input("Surname", value=st.session_state["profile"]["surname"])
        st.session_state["profile"]["age"] = st.number_input("Age", min_value=0, value=st.session_state["profile"]["age"])
        
        st.session_state["profile"]["facebook_friends"] = st.number_input("Facebook Friends", min_value=0, value=st.session_state["profile"]["facebook_friends"])
        st.session_state["profile"]["instagram_followers"] = st.number_input("Instagram Followers", min_value=0, value=st.session_state["profile"]["instagram_followers"])
        st.session_state["profile"]["adonboard_friends"] = st.number_input("AdOnBoard Friends", min_value=0, value=st.session_state["profile"]["adonboard_friends"])

        photo_file = st.file_uploader("Upload a Profile Photo", type=["jpg","jpeg","png"])
        save_btn = st.form_submit_button("Save Profile")
        if save_btn:
            if photo_file is not None:
                st.session_state["profile"]["photo"] = photo_file.read()
                st.success("Profile photo uploaded!")
            else:
                st.session_state["profile"]["photo"] = None
            st.success("Profile data saved! Now you can proceed to 'Board Game' tab.")

    # Show photo
    if st.session_state["profile"]["photo"]:
        st.image(st.session_state["profile"]["photo"], caption="Your Profile Photo", width=150)

# ========== TAB 2: Board Game (Islands & Beaches) ==========
with tabs[1]:
    st.title("Board Game: Islands & Beaches with Dotted Routes")

    st.write("We have multiple beach stops. Some squares may have sponsor logos pinned on them.")
    st.write(f"**Total NM**: {st.session_state['total_nm']:.2f}")

    # Φτιάχνουμε χάρτη
    squares = st.session_state["island_squares"]
    center_coords = squares[0]["coords"]
    m = folium.Map(location=center_coords, zoom_start=6)

    coords_list = []
    for sq in squares:
        coords_list.append(sq["coords"])
        # βασικός marker
        folium.Marker(sq["coords"], tooltip=sq["name"]).add_to(m)
        # αν υπάρχει sponsor_logo
        if sq["sponsor_logo"] is not None:
            icon_html = folium.CustomIcon(sq["sponsor_logo"], icon_size=(50,50))
            folium.Marker(
                sq["coords"],
                icon=icon_html,
                tooltip=f"Sponsor at {sq['name']}"
            ).add_to(m)

    # Προσθήκη διακεκομμένης γραμμής (dash_array="5,5") μεταξύ των παραλιών
    folium.PolyLine(
        coords_list,
        color="blue",
        weight=3,
        dash_array="5,5"
    ).add_to(m)

    st_folium(m, width=700, height=450)

    # Κόκκινη ειδοποίηση αν sponsor_decision == "Approved"
    if st.session_state["sponsor_decision"] == "Approved":
        st.markdown("### 🚨 **New Sponsor Notification** 🚨")
        st.info("Your sponsor has APPROVED your profile! Click below to open.")
        if st.button("Open Notification"):
            st.image("https://via.placeholder.com/600x300.png?text=Boat+with+Sponsor+Logos",
                     caption="Καλώς ήρθες στο ταξίδι! (Sponsored).")
            st.success("Enjoy your sponsored journey with custom logos & t-shirts!")

    # Εμφανίζουμε Sponsor Offer + Διαδρομή
    st.markdown("### Sponsor Offer")
    st.info("""Sponsor: 'Vodafone' wants 1000 impressions, 50% discount. 
**Proposed Route**: Rhodes - Main Port → Kallithea Beach → Lindos Beach → Prasonisi Beach → Finish Spot
\n(Shown as dotted line on the map above).  
Will you accept or decline?""")

    accept_btn = st.button("Yes, Accept Sponsor")
    decline_btn = st.button("No, Decline Sponsor")

    if accept_btn:
        dur_days = 5
        sday = date.today()
        eday = sday + timedelta(days=dur_days)
        st.session_state["active_sponsor"] = {
            "sponsor_name": "Vodafone",
            "required_impressions": 1000,
            "discount_percent": 50,
            "duration_days": dur_days,
            "start_date": sday,
            "end_date": eday,
            "daily_posts": 2,
            "hours_near_beach": 4,
            "tshirts": "Vodafone T-shirts & Banners"
        }
        st.session_state["profile_sent"] = False
        st.session_state["sponsor_decision"] = None
        st.session_state["final_campaign_decision"] = None
        st.success("Sponsor accepted. You can 'Send My Profile to Sponsor' or check Tab 3.")
    elif decline_btn:
        st.warning("Declined sponsor.")
        st.session_state["active_sponsor"] = None
        st.session_state["profile_sent"] = False
        st.session_state["sponsor_decision"] = None
        st.session_state["final_campaign_decision"] = None

    # If there's an active sponsor
    sp = st.session_state["active_sponsor"]
    if sp is not None:
        st.markdown("### Sponsor Requirements (quick view)")
        st.write(f"- Required Impressions: {sp['required_impressions']}")
        st.write(f"- Discount: {sp['discount_percent']}%")
        st.write(f"- Duration: {sp['duration_days']} days ({sp['start_date']}→{sp['end_date']})")
        st.write(f"- {sp['daily_posts']} posts/day")

